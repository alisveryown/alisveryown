(define (crossfit word1 word2)
  (define (find-matches char lst2 pos1 pos2)
    (if (empty? lst2)
        '()
        (if (= (string-ref word2 pos2) char)
            (cons (list pos1 pos2)
                  (find-matches char (cdr lst2) pos1 (add1 pos2)))
            (find-matches char (cdr lst2) pos1 (add1 pos2)))))

  (define (append-lists lst1 lst2)
    (if (empty? lst1)
        lst2
        (cons (car lst1) (append-lists (cdr lst1) lst2))))

  (define (helper lst1 lst2 pos1)
    (if (empty? lst1)
        '()
        (append-lists (find-matches (car lst1) (string->list word2) pos1 0)
                      (helper (cdr lst1) (string->list word2) (add1 pos1)))))

  (helper (string->list word1) (string->list word2) 0))

; Examples
(display (crossfit "tomato" "camel")) ; Output: ((2 2) (3 1))
(newline)
(display (crossfit "folly" "mutled")) ; Output: ((2 2) (2 3) (3 2) (3 3))
(newline)
(display (crossfit "foil" "paper")) ; Output: ()
(newline)
