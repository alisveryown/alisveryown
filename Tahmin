(define (crossfit word1 word2)
  (define (helper lst1 lst2 pos1)
    (cond [(= (length lst1) 0) '()]
          [else (crossfit-iter lst1 lst2 pos1 0)]))

  (define (crossfit-iter lst1 lst2 pos1 pos2)
    (cond [(= (length lst2) 0) '()]
          [(= (car lst1) (car lst2))
           (cons (list pos1 pos2)
                 (crossfit-iter (cdr lst1) (cdr lst2) (add1 pos1) (add1 pos2)))]
          [else (crossfit-iter lst1 (cdr lst2) pos1 (add1 pos2))]))

  (helper (string->list word1) (string->list word2) 0))

; Examples
(display (crossfit "tomato" "camel")) ; Output: ((2 2) (3 1))
(newline)
(display (crossfit "folly" "mutled")) ; Output: ((2 2) (2 3) (3 2) (3 3))
(newline)
(display (crossfit "foil" "paper")) ; Output: ()
(newline)
